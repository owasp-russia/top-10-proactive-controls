# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, OWASP Foundation
# This file is distributed under the same license as the OWASP Proactive Controls package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# JZDLin, 2019
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: OWASP Proactive Controls\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-01-24 16:38+0300\n"
"PO-Revision-Date: 2019-01-16 10:21+0000\n"
"Last-Translator: JZDLin, 2019\n"
"Language-Team: Russian (https://www.transifex.com/owasp/teams/95217/ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || (n%100>=11 && n%100<=14)? 2 : 3);\n"

# ead6808e93df478895e624ad0190cfd9
#: ../../c5-validate-all-inputs.rst:2
msgid "C5: Validate All Inputs"
msgstr "C5: Обязательная проверка всех входных данных"

# 98eb3b06d0ed485ca811debc52750e97
#: ../../c5-validate-all-inputs.rst:5
msgid "Description"
msgstr "Описание"

# 2b71715b299d44fb943b8e4891f564ed
#: ../../c5-validate-all-inputs.rst:7
msgid ""
"Input validation is a programming technique that ensures only properly "
"formatted data may enter a software system component."
msgstr ""
"Проверка входных данных является частью методики программирования, "
"обеспечивающей попадание в компоненты программы только правильно "
"отформатированных данных."

# e9770f03d04f400f83b5b4f2b3bb99f0
#: ../../c5-validate-all-inputs.rst:10
msgid "Syntax and Semantic Validity"
msgstr "Синтаксическая и семантическая норма"

# ea0f812297ca499cbfa81ab9183e69ec
#: ../../c5-validate-all-inputs.rst:12
msgid ""
"An application should check that data is both *syntactically* and "
"*semantically* valid (in that order) before using it in any way (including "
"displaying it back to the user)."
msgstr ""

# 0899c0144b444b749cb72fc57bea1abb
#: ../../c5-validate-all-inputs.rst:14
msgid ""
"*Syntax validity* means that the data is in the form that is expected. For "
"example, an application may allow a user to select a four-digit \"account "
"ID\" to perform some kind of operation. The application should assume the "
"user is entering a SQL injection payload, and should check that the data "
"entered by the user is exactly four digits in length, and consists only of "
"numbers (in addition to utilizing proper query parameterization)."
msgstr ""

# 2a476fc0f27a477da0a04659105abf33
#: ../../c5-validate-all-inputs.rst:16
msgid ""
"*Semantic validity* includes only accepting input that is within an "
"acceptable range for the given application functionality and context. For "
"example, a start date must be before an end date when choosing date ranges."
msgstr ""

# 19894b096667436499b7a15b6f4e7f49
#: ../../c5-validate-all-inputs.rst:19
msgid "Whitelisting vs Blacklisting"
msgstr "Белые и черные списки"

# 0771e052bc554696a85b2e340ef044ae
#: ../../c5-validate-all-inputs.rst:21
msgid ""
"There are two general approaches to performing input syntax validation, "
"commonly known as blacklisting and whitelisting:"
msgstr ""
"Существует два основных подхода к проверке синтаксиса входных данных, "
"известные как черные и белые списки."

# 47ad618c3ae64c1ead2f3b502feece0e
#: ../../c5-validate-all-inputs.rst:23
msgid ""
"*Blacklisting* or *blacklist validation* attempts to check that given data "
"does not contain \"known bad\" content. For example, a web application may "
"block input that contains the exact text ``<SCRIPT>`` in order to help "
"prevent XSS. However, this defense could be evaded with a lower case script "
"tag or a script tag of mixed case."
msgstr ""

# cdc8e7b6165942bb89be9edc3eb0ac2a
#: ../../c5-validate-all-inputs.rst:24
msgid ""
"*Whitelisting* or *whitelist* validation attempts to check that a given data"
" matches a set of \"known good\" rules. For example a whitelist validation "
"rule for a US state would be a 2-letter code that is only one of the valid "
"US states."
msgstr ""

# 82e62e047fac4b92864d90bf5e9a8de4
#: ../../c5-validate-all-inputs.rst:26
msgid ""
"When building secure software, whitelisting is the recommended minimal "
"approach. Blacklisting is prone to error and can be bypassed with various "
"evasion techniques and can be dangerous when depended on by itself. Even "
"though blacklisting can often be evaded it can often useful to help detect "
"obvious attacks. So while *whitelisting* helps limit the attack surface by "
"ensuring data is of the right syntactic and semantic validity, "
"*blacklisting* helps detect and potentially stop obvious attacks."
msgstr ""

# 5d3d5204ec204186835e166a15a96907
#: ../../c5-validate-all-inputs.rst:29
msgid "Client side and Server side Validation"
msgstr "Проверки на стороне клиента и на стороне сервера"

# 8f1e0c1798904eb78dcd7878782fb83f
#: ../../c5-validate-all-inputs.rst:31
msgid ""
"Input validation must always be done on the server-side for security. While "
"client side validation can be useful for both functional and some security "
"purposes it can often be easily bypassed. This makes server-side validation "
"even more fundamental to security. For example, JavaScript validation may "
"alert the user that a particular field must consist of numbers but the "
"server side application must validate that the submitted data only consists "
"of numbers in the appropriate numerical range for that feature."
msgstr ""
"Для обеспечения безопасности, проверку входных данных необходимо всегда "
"проводить на стороне сервера. Проверки на стороне клиента могут быть полезны"
" с точки зрения функциональности и безопасности, но зачастую их легко "
"обойти. Таким образом, проверка на стороне сервера является более "
"предпочтительной для обеспечения безопасности. Например, проверка JavaScript"
" может предупредить пользователя о том, что поле должно содержать только "
"цифры, а вот приложение на стороне сервера должно подтвердить, что вводимые "
"данные представляют собой числа в допустимом диапазоне значений."

# 1aa7c146c2f04868875b0eed1a81c334
#: ../../c5-validate-all-inputs.rst:34
msgid "Regular Expressions"
msgstr "Регулярные выражения"

# b018e8e926eb41139950dd0245234077
#: ../../c5-validate-all-inputs.rst:36
msgid ""
"Regular expressions offer a way to check whether data matches a specific "
"pattern. Let’s start with a basic example."
msgstr ""
"Регулярные выражения позволяют проверять данные на соответствие "
"определенному шаблону. Начнем с простого примера."

# 20bae78b6e2a431a9ff2bf17b245a95e
#: ../../c5-validate-all-inputs.rst:38
msgid ""
"The following regular expression is used to define a whitelist rule to "
"validate usernames."
msgstr ""
"Следующее регулярное выражение используется для определения белого списка "
"имен пользователей."

# 1e7fec754ab045348b80c370f98c79f7
#: ../../c5-validate-all-inputs.rst:44
msgid ""
"This regular expression allows only lowercase letters, numbers and the "
"underscore character. The username is also restricted to a length of 3 and "
"16 characters."
msgstr ""
"Данное регулярное выражение допускает использование только строчных букв, "
"цифр и символа подчеркивания. Длина имени пользователя также ограничивается "
"3–16 символами."

# 14aa3e4b10344dbda4236ccd25873619
#: ../../c5-validate-all-inputs.rst:47
msgid "Caution: Potential for Denial of Service"
msgstr "Внимание! Возможен отказ в обслуживании"

# 71a97b1bb5194f6790d3c776bd7858e1
#: ../../c5-validate-all-inputs.rst:49
msgid ""
"Care should be exercised when creating regular expressions. Poorly designed "
"expressions may result in potential denial of service conditions (aka `ReDoS"
" <https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-"
"_ReDoS>`_). Various tools can test to verify that regular expressions are "
"not vulnerable to ReDoS."
msgstr ""

# bfc7669dc8d34830b9df7dd3a463578f
#: ../../c5-validate-all-inputs.rst:52
msgid "Caution: Complexity"
msgstr "Внимание! Сложность реализации"

# cfe9e4c82c1c4e6ea73fe1fdf9c0c8ea
#: ../../c5-validate-all-inputs.rst:54
msgid ""
"Regular expressions are just one way to accomplish validation. Regular "
"expressions can be difficult to maintain or understand for some developers. "
"Other validation alternatives involve writing validation methods "
"programmatically which can be easier to maintain for some developers."
msgstr ""
"Регулярные выражения — это всего лишь один из способов выполнения проверок. "
"Некоторым разработчикам бывает сложно разобраться или работать с регулярными"
" выражениями, поэтому создание программных методов проверки им кажется более"
" простым."

# ee66207eaf6040c9a83b53b528a3c1c8
#: ../../c5-validate-all-inputs.rst:58
msgid "Limits of Input Validation"
msgstr "Ограничения проверок входных данных"

# cc82c5d8c8dc4806ba0628d4cd0a9e88
#: ../../c5-validate-all-inputs.rst:60
msgid ""
"**Input validation does not always make data \"safe\" since certain forms of"
" complex input may be \"valid\" but still dangerous. For example a valid "
"email address may contain a SQL injection attack or a valid URL may contain "
"a Cross Site Scripting attack**. Additional defenses besides input "
"validation should always be applied to data such as query parameterization "
"or escaping."
msgstr ""

# dcd787f5d0bf43ccaf9f4ef428557601
#: ../../c5-validate-all-inputs.rst:63
msgid "Challenges of Validating Serialized Data"
msgstr "Проблемы проверки сериализованных данных"

# 0fe386024a554a8b87fec1b450b558b4
#: ../../c5-validate-all-inputs.rst:65
msgid ""
"Some forms of input are so complex that validation can only minimally "
"protect the application. For example, it's dangerous to deserialize "
"untrusted data or data that can be manipulated by an attacker. The only safe"
" architectural pattern is to not accept serialized objects from untrusted "
"sources or to only deserialize in limited capacity for only simple data "
"types. You should avoid processing serialized data formats and use easier to"
" defend formats such as JSON when possible."
msgstr ""
"Некоторые входные данные настолько сложные, что проверка может обеспечить "
"лишь минимальную защиту приложения. Например, опасно десериализовывать "
"непроверенные данные или данные, которые могут быть изменены "
"злоумышленниками. Единственным безопасным решением будет отклонять "
"сериализованные объекты от непроверенных источников или ограничивать "
"десериализацию простыми типами данных. Необходимо избегать обработки "
"сериализованных данных и использовать, по возможности, более простые с точки"
" зрения обеспечения защиты форматы, такие как JSON."

# 3b77035cddf5416794609ebe749b0f75
#: ../../c5-validate-all-inputs.rst:67
msgid ""
"If that is not possible then consider a series of validation defenses when "
"processing serialized data."
msgstr ""
"Если выше указанное невозможно, рекомендуется использовать серию проверок "
"при обработке сериализованных данных."

# 6c90da7c0e0c4087802e7c22c7544916
#: ../../c5-validate-all-inputs.rst:69
msgid ""
"Implement integrity checks or encryption of the serialized objects to "
"prevent hostile object creation or data tampering."
msgstr ""
"Реализуйте проверки целостности или шифрование сериализованных объектов для "
"предотвращения создания вредоносных объектов или подмены данных."

# 838f55ad6c544980927f9c2990a9bf93
#: ../../c5-validate-all-inputs.rst:70
msgid ""
"Enforce strict type constraints during deserialization before object "
"creation; typically code is expecting a definable set of classes. Bypasses "
"to this technique have been demonstrated."
msgstr ""
"Введите строгие ограничения типов при десериализации перед созданием "
"объекта; обычно, ожидаемым является поддающийся определению набор классов. "
"Методы обхода подобной защиты были представлены."

# d567d20fe046430cbcede2d892d88294
#: ../../c5-validate-all-inputs.rst:71
msgid ""
"Isolate code that deserializes, such that it runs in very low privilege "
"environments, such as temporary containers."
msgstr ""
"Изолируйте код десериализации, чтобы он запускался в окружении с низким "
"уровнем привилегий, например, во временных контейнерах."

# 2bafeb824d4b4a519554431b128dcd58
#: ../../c5-validate-all-inputs.rst:72
msgid ""
"Log security deserialization exceptions and failures, such as where the "
"incoming type is not the expected type, or the deserialization throws "
"exceptions."
msgstr ""
"Обеспечьте журналирование исключений и ошибок десериализации, например, "
"случаев непредусмотренных типов входных данных или исключений при "
"десериализации."

# eca10988b7a5440da5c8fab57a2ddd38
#: ../../c5-validate-all-inputs.rst:73
msgid ""
"Restrict or monitor incoming and outgoing network connectivity from "
"containers or servers that deserialize."
msgstr ""
"Ограничьте или контролируйте входящие и исходящие сетевые подключения "
"контейнеров или серверов, осуществляющих десериализацию."

# 154af212d0314b5884727b215af8f561
#: ../../c5-validate-all-inputs.rst:74
msgid "Monitor deserialization, alerting if a user deserializes constantly."
msgstr ""
"Отслеживайте десериализацию, предупреждая о продолжительных фактах "
"десериализации пользователем."

# 7f3a197e1a84459e83f368bd4e457a96
#: ../../c5-validate-all-inputs.rst:78
msgid "Unexpected User Input (Mass Assignment)"
msgstr "Непредусмотренные входные данные (массовое назначение)"

# 6c3669a416f446928c5aac1423ed6032
#: ../../c5-validate-all-inputs.rst:80
msgid ""
"Some frameworks support automatic binding of HTTP requests parameters to "
"server-side objects used by the application. This auto-binding feature can "
"allow an attacker to update server-side objects that were not meant to be "
"modified. The attacker can possibly modify their access control level or "
"circumvent the intended business logic of the application with this feature."
msgstr ""
"Некоторые фреймворки поддерживают автоматическую привязку параметров HTTP-"
"запросов к серверным объектам, используемым приложением. Подобная функция "
"автопривязки может позволить злоумышленникам обновить серверные объекты, не "
"предназначенные для изменения. Используя данную функцию, атакующий может "
"изменить свой уровень доступа или обойти бизнес-логику приложения."

# dfaa5834afd546c7a0e3c91edba6c072
#: ../../c5-validate-all-inputs.rst:82
msgid ""
"This attack has a number of names including: mass assignment, autobinding "
"and object injection."
msgstr ""
"Данная атака имеет несколько названий, включая массовое назначение, "
"автопривязку и внедрение объектов."

# 8fad9c4d001d40c29f1dfed67b2edc15
#: ../../c5-validate-all-inputs.rst:84
msgid ""
"As a simple example, if the user object has a field privilege which "
"specifies the user's privilege level in the application, a malicious user "
"can look for pages where user data is modified and add privilege=admin to "
"the HTTP parameters sent.  If auto-binding is enabled in an insecure "
"fashion, the server-side object representing the user will be modified "
"accordingly."
msgstr ""
"Простой пример: если объект пользователя имеет привилегию field, "
"определяющую уровень привилегий пользователя в приложении, то злоумышленник "
"может найти страницы с измененными данными пользователя и добавить "
"privilege=admin к отправленным HTTP-параметрам. При небезопасной настройке "
"автопривязки серверный объект, представляющий пользователя, будет изменен "
"соответствующим образом."

# 856c46a302f447d2b4aba8e3f7f4b704
#: ../../c5-validate-all-inputs.rst:86
msgid "Two approaches can be used to handle this:"
msgstr "Решить данную проблему можно двумя способами:"

# 0ca021b06a7546cf82d56daeb9339389
#: ../../c5-validate-all-inputs.rst:88
msgid ""
"Avoid binding input directly and use Data Transfer Objects (DTOs) instead."
msgstr ""
"избегать привязки входных данных напрямую и использовать вместо этого "
"объекты переноса данных (DTO);"

# 45dafa3db7cc49149f5f815ab5ae9335
#: ../../c5-validate-all-inputs.rst:89
msgid ""
"Enable auto-binding but set up whitelist rules for each page or feature to "
"define which fields are allowed to be auto-bound."
msgstr ""
"настроить белые списки для каждой страницы или функции, которые будут "
"определять поля, разрешенные для автопривязки."

# 6cfd9bdc2c7a46ea8c5c199577cc2cbc
#: ../../c5-validate-all-inputs.rst:91
msgid ""
"More examples are available in the `OWASP Mass Assignment Cheat Sheet "
"<https://www.owasp.org/index.php/Mass_Assignment_Cheat_Sheet>`_."
msgstr ""

# dd8b174574ec40eea13b93fe418070f1
#: ../../c5-validate-all-inputs.rst:94
msgid "Validating and Sanitizing HTML"
msgstr "Проверка и очистка HTML"

# 5dc948952e534c4daad3f35f3c868a8f
#: ../../c5-validate-all-inputs.rst:96
msgid ""
"Consider an application that needs to accept HTML from users (via a WYSIWYG "
"editor that represents content as HTML or features that directly accept HTML"
" in input). In this situation validation or escaping will not help."
msgstr ""
"Рассмотрим приложение, которое будет принимать HTML от пользователей (через "
"редактор WYSIWYG, представляющий содержимое как HTML, или через функции, "
"напрямую принимающие HTML во входных данных). В этом случае проверка или "
"очистка не поможет."

# 386a05c98053427dac24d9992ca60488
#: ../../c5-validate-all-inputs.rst:98
msgid ""
"Regular expressions are not expressive enough to understand the complexity "
"of HTML5."
msgstr ""
"Регулярных выражений будет недостаточно, чтобы отобразить всю сложность "
"HTML5."

# d4f7e38d26c540a48e2b924aa0cfbcd1
#: ../../c5-validate-all-inputs.rst:99
msgid ""
"Encoding or escaping HTML will not help since it will cause the HTML to not "
"render properly."
msgstr ""
"Кодировка или очистка HTML не подойдет, так как приведет к некорректному "
"отображению HTML-кода."

# 1aacb39af4dc4eba852298adafe90f22
#: ../../c5-validate-all-inputs.rst:101
msgid ""
"Therefore, you need a library that can parse and clean HTML formatted text. "
"Please see the `XSS Prevention Cheat Sheet on HTML Sanitization "
"<https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet#RULE_"
".236_-_Sanitize_HTML_Markup_with_a_Library_Designed_for_the_Job>`_ for more "
"information on HTML Sanitization."
msgstr ""

# 2805bd29970f48f4a66b0e33b5f2dc74
#: ../../c5-validate-all-inputs.rst:104
msgid "Validation Functionality in Libraries and Frameworks"
msgstr "Функции проверки в библиотеках и фреймворках"

# dbea97fc636040fd8728e7e61aea3c4d
#: ../../c5-validate-all-inputs.rst:106
msgid ""
"All languages and most frameworks provide validation libraries or functions "
"which should be leveraged to validate data. Validation libraries typically "
"cover common data types, length requirements, integer ranges, \"is null\" "
"checks and more. Many validation libraries and frameworks allow you to "
"define your own regular expression or logic for custom validation in a way "
"that allows the programmer to leverage that functionality throughout your "
"application. Examples of validation functionality include PHP’s `filter "
"functions "
"<https://secure.php.net/manual/en/filter.examples.validation.php>`_ or the "
"`Hibernate Validator <http://hibernate.org/validator/>`_ for Java. Examples "
"of HTML Sanitizers include `Ruby on Rails sanitize method "
"<http://edgeapi.rubyonrails.org/classes/ActionView/Helpers/SanitizeHelper.html>`_,"
" `OWASP Java HTML Sanitizer "
"<https://www.owasp.org/index.php/OWASP_Java_HTML_Sanitizer_Project>`_ or "
"`DOMPurify <https://github.com/cure53/DOMPurify>`_."
msgstr ""

# dc998c84e0cd4a1daf92fc9cf8bb7ea1
#: ../../c5-validate-all-inputs.rst:109
msgid "Vulnerabilities Prevented"
msgstr "Предотвращаемые уязвимости"

# 53e2d383fe344aff9e2ced701bba3fed
#: ../../c5-validate-all-inputs.rst:111
msgid ""
"Input validation reduces the attack surface of applications and can "
"sometimes make attacks more difficult against an application."
msgstr ""
"Проверка входных данных снижает вероятность эксплуатации уязвимостей, а "
"иногда затрудняет проведение атаки на приложение."

# 37beb35192114213bb33d515bd9e2b63
#: ../../c5-validate-all-inputs.rst:112
msgid ""
"Input validation is a technique that provides security to certain forms of "
"data, specific to certain attacks and cannot be reliably applied as a "
"general security rule."
msgstr ""
"Проверка входных данных обеспечивает защиту определенных видов данных от "
"определенных видов атак, поэтому не может быть использована в качестве "
"надежного средства обеспечения общей безопасности."

# 918655eb331b40d9bcb2dd995e9b38cb
#: ../../c5-validate-all-inputs.rst:113
msgid ""
"Input validation should not be used as the primary method of preventing `XSS"
" "
"<https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet>`_,"
" `SQL Injection "
"<https://www.owasp.org/index.php/SQL_Injection_Prevention_Cheat_Sheet>`_ and"
" other attacks."
msgstr ""

# c6500811d0a7461d8899effcbb2f92a9
#: ../../c5-validate-all-inputs.rst:116
msgid "References"
msgstr "Ссылки"

# a0632f3417f7470e9003bc7a1ca51140
#: ../../c5-validate-all-inputs.rst:118
msgid ""
"`OWASP Cheat Sheet: Input Validation "
"<https://www.owasp.org/index.php/Input_Validation_Cheat_Sheet>`_"
msgstr ""

# ac6edcea50544f73ab716e0b3bce2e82
#: ../../c5-validate-all-inputs.rst:119
msgid ""
"`OWASP Cheat Sheet: iOS - Security Decisions via Untrusted Inputs "
"<https://www.owasp.org/index.php/IOS_Developer_Cheat_Sheet#Security_Decisions_via_Untrusted_Inputs_.28M7.29>`_"
msgstr ""

# c0e9bd51148841bd9cda5776e4ea54e5
#: ../../c5-validate-all-inputs.rst:120
msgid ""
"`OWASP Testing Guide: Testing for Input Validation "
"<https://www.owasp.org/index.php/Testing_for_Input_Validation>`_"
msgstr ""

# fe4528e1e7ac477188e00643da0509ec
#: ../../c5-validate-all-inputs.rst:123
msgid "Tools"
msgstr "Инструменты"

# 6f6ad9b0aadf4aa8862602319224a570
#: ../../c5-validate-all-inputs.rst:125
msgid ""
"`OWASP Java HTML Sanitizer Project "
"<https://www.owasp.org/index.php/OWASP_Java_HTML_Sanitizer>`_"
msgstr ""

# 9e30b00812cc48a78989d512c20633aa
#: ../../c5-validate-all-inputs.rst:126
msgid "`Java JSR-303/JSR-349 Bean Validation <http://beanvalidation.org/>`_"
msgstr ""

# 104f180b537d4b4da1be52ba1317f2e7
#: ../../c5-validate-all-inputs.rst:127
msgid "`Java Hibernate Validator <http://hibernate.org/validator/>`_"
msgstr ""

# f623358082aa406c892f43d2adf52f2d
#: ../../c5-validate-all-inputs.rst:128
msgid ""
"`JEP-290 Filter Incoming Serialization Data "
"<http://openjdk.java.net/jeps/290>`_"
msgstr ""

# 3087791c779d4392ab8363233a4029ae
#: ../../c5-validate-all-inputs.rst:129
msgid ""
"`Apache Commons Validator <https://commons.apache.org/proper/commons-"
"validator/>`_"
msgstr ""

# 0752d4243b8b43f3bc8a0bbe192f912b
#: ../../c5-validate-all-inputs.rst:130
msgid ""
"PHP’s `filter functions <https://secure.php.net/manual/en/book.filter.php>`_"
msgstr ""
